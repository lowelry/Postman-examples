На основе запросов из "simple requests" создать коллекцию аналогичных запросов, к которым написать тесты,
выполняющие ряд проверок из следующего списка в соответствии с запросом, для всех запросов написать проверку
статус кода 200 на уровне коллекции:

title: /user_info_3

1. Спарсить тело ответа в json
2. Проверить, что параметр "name" в ответе равен параметру "name" в запросе ("name" ввести вручную)
3. Проверить, что параметр "age" в ответе равен параметру "age" в запросе ("age" ввести вручную)
4. Проверить, что параметр "salary" в ответе равен параметру "salary" в запросе ("salary" ввести вручную)
5. Спарсить запрос
6. Проверить, что праметр "name" в ответе равен параметру "name" в запросе
7. Проверить, что параметр "age" в ответе равен параметру "age" в запросе
8. Проверить, что параметр "salary" в ответе равен параметру "salary" в запросе
9. Вывести параметр "family" в консоль
10. Проверить, что параметр "u_salary_1_5_year" в ответе равен параметру "salary" из запроса, умноженному на 4

title: /object_info_3

1. Спарсить тело ответа в json
2. Спарсить запрос
3. Проверить, что параметр "name" в ответе равен параметру "name" в запросе
4. Проверить, что параметр "age" в ответе равен параметру "age" в запросе
5. Проверить, что параметр "salary" в ответе равен параметру "salary" в запросе
6. Вывести в консоль параметр "family" из ответа
7. Проверить, что у параметра "dog" есть параметр "name"
8. Проверить, что у параметра "dog" есть параметр "age"
9. Проверить, что паметр "name" параметра "dog" имеет значение "Luky"
10. Проверить, что паметр "age" параметра "dog" имеет значение 4

title: /object_info_4

1. cпарсить тело ответа в json
2. cпарсить запрос
3. проверить, что параметр "name" в ответе равен параметру "name" в запросе
4. проверить, что параметр "age" в ответе равен параметру "age" в запросе
5. вывести в консоль параметр "salary" из запроса
6. вывести в консоль параметр "salary" из ответа
7. вывести в консоль 0-й элемент параметра salary из ответа
8. вывести в консоль 1-й элемент параметра salary из ответа
9. вывести в консоль 2-й элемент параметра salary из ответа
10. проверить, что 0-й элемент параметра "salary" в ответе равен параметру "salary" в запросе
11. проверить, что 1-й элемент параметра "salary" в ответе равен параметру "salary" в запросе, умноженному на 2
12. проверить, что 2-й элемент параметра "salary" в ответе равен параметру "salary" в запросе, умноженному на 3
13. написать цикл, который выводит в консоль по порядку элементы списка из параметра "salary" из ответа

title: /user_info_2

1. cпарсить тело ответа в json
2. cпарсить запрос
3. проверить, что в ответе есть параметр "start_qa_salary"
4. проверить, что в ответе есть параметр "qa_salary_after_6_months"
5. проверить, что в ответе есть параметр "qa_salary_after_12_months"
6. проверить, что в ответе есть параметр "qa_salary_after_1.5_year"
7. проверить, что в ответе есть параметр "qa_salary_after_3.5_years"
8. проверить, что в ответе есть параметр "person"
9. проверить, что параметр "start_qa_salary" в ответе равен параметру "salary" в запросе
10. проверить, что параметр "qa_salary_after_6_months" в ответе равен параметру "salary" из запроса, умноженному на 2
11. проверить, что параметр "qa_salary_after_12_months" в ответе равен параметру "salary" в запросе, умноженному на 2.7
12. проверить, что параметр "qa_salary_after_1.5_year" в ответе равен параметру "salary" в запросе, умноженному на 3.3
13. проверить, что параметр "qa_salary_after_3.5_years" в ответе равен параметру "salary" в запросе, умноженному на 3.8
14. проверить, что 1-й элемент массива параметра "u_name" параметра "person" в ответе равен параметру "salary" в запросе
15. проверить, что параметр "u_salary_5_years" параметра "person" в ответе равен параметру "salary" в запросе, умноженному на 4.2
16. написать цикл, который выводит в консоль элементы списка из параметра "person" из ответа
