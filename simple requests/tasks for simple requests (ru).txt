Создать запросы в Postman, обращающиеся к серверу со следующими данными:
	protocol - http
	IP - 162.55.220.72
	port - 5005

Запросы должны затрагивать следующие эндпоинты, содержать валидные данные:

1.
title: /get_method
method: GET
endpoint: /get_method
params:
	name: str
	age: int

Структура данных в ответе:
[
	"str",
	"str"
]

2.
title: /user_info_3
method: POST
endpoint: /get_method
formdata:
	name: str
	age: int
	salary: int

Структура данных в ответе:
{
	'name': name,
	'age': age,
	'salary': salary,
	'family': {
			'children':[
					[
						'Alex',
						24
					],
					[
						'Kate',
						12
					]
				    ],
			'u_salary_1_5_year': salary * 4
		   }
}

3.
title: /object_info_1
method: GET
endpoint: /object_info_1
params:
	name: str
	age: int
	weight: int

Структура данных в ответе:
{
	'name': name,
	'age': age,
	'daily_food': weight * 0.012,
	'daily_sleep': weight * 2.5
}

4.
title: /object_info_2
method: GET
endpoint: /object_info_2
params:
	name: str
	age: int
	salary: int

Структура данных в ответе:
{
	'start_qa_salary': salary,
	'qa_salary_after_6_months': salary * 2,
	'qa_salary_after_12_months': salary * 2.7,
	'qa_salary_after_1.5_year': salary * 3.3,
	'qa_salary_after_3.5_years': salary * 3.8,
	'person': {
			'u_name': [
					user_name,
					salary,
					age
				  ],
			'u_age': age,
			'u_salary_5_years': salary * 4.2
		  }
}

5.
title: /object_info_3
method: GET
endpoint: /object_info_3
params:
	name: str
	age: int
	salary: int

Структура данных в ответе:
{
	'name': name,
	'age': age,
	'salary': salary,
	'family': {
			'children': [
					[
						'Alex',
						24
					],
					[
						'Kate',
						12
					]
			            ],
			'pets': {
					'cat':{
						'name':'Sunny',
						'age': 3
					      },
					'dog':{
						'name':'Luky',                                  
						'age': 4
					      }
				 },
			'u_salary_1_5_year': salary * 4
		   }
}

6.
title: /object_info_4
method: GET
endpoint: /object_info_4
params:
	name: str
	age: int
	salary: int

Структура данных в ответе:
{
	'name': name,
	'age': int(age),
	'salary': [
			salary,
			str(salary * 2),
			str(salary * 3)
		  ]
}

7.
title: /user_info_2
method: POST
endpoint: /user_info_2
formdata:
	name: str
	age: int
	salary: int

Структура данных в ответе:
{
	'start_qa_salary': salary,
	'qa_salary_after_6_months': salary * 2,
	'qa_salary_after_12_months': salary * 2.7,
	'qa_salary_after_1.5_year': salary * 3.3,
	'qa_salary_after_3.5_years': salary * 3.8,
	'person': {
			'u_name': [
					user_name,
					salary,
					age
				  ],
			'u_age': age,
			'u_salary_5_years': salary * 4.2
		   }
}
